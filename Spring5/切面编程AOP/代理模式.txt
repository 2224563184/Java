
            代理模式


一.静态代理:
  1.目标对象必须要实现接口
  2.目标对象和代理对象上面的接口一样                       (笨重)
  3.代理对象在程序运行前就已经存在
  4.虽然代理对象可以任意切换目标对象,但是灵活切换函数         (笨重)

提示:接口编程属于静态代理


二.动态代理
  1.非入侵式, 不会伤害源代码
  2.可以灵活切换函数




三.动态代理使用方法:
1.区分增强目标属于什么类型:
    有接口:  使用JDK动态代理                            java.lang.reflect.Proxy
    无接口:  使用Spring5动态代理

动态代理存在的意义: 在三层架构中,业务逻辑层要通过接口访问数据访问层的功能,动态代理可以实现
动态代理的实现规范:
1) UsersMapper.xml文件与UsersMapper.java的接口必须同一个目录下.
2) UsersMapper.xml文件与UsersMapper. java的接口的文件名必须一致,后缀不管,