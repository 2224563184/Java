一、
GUI事件处理:
           在一个组件上发生了一个操作的时候,会自动地出发一段代码执行

1.事件源:     操作发生的组件
2.事件：      在事件源上发生的操作教做事件，GUI会把事件都封装成一个Event对象中，想要知道该事件的详细信息通过Event对象来获取
3.事件监听器:  事件源发生了事件后，事件监听器对这个事件进行处理
4.注册监听:    事件监听器A,通过事件B,绑定到某个事件源C上,当事件源C发生了事件B后,事件监听器A的代码会自动执行

 使用步骤：
         ①.创建事件源组件对象
         ②.自定义类,实现XxxListener接口,重写事件源方法
         ③.创建事件监听器对象(自定义类对象)
         ④.创建事件源组件对象的addXxxListener方法来注册监听


二、事件和事件监听器
   1.低级事件：这类事件是某个特定动作的事件。例如进入、点击、拖放等动作的鼠标事件；再例如得到焦点和失去焦点等焦点事件
①ComponentEvent：组件事件，当组件尺寸发生变化、位置发生移动、显示/隐藏状态发生改变时触发该事件
②ContainerEvent：容器事件，当容器里发生添加组件、删除组件时触发该事件
③WindowEvent：   窗口事件，当窗口发生改变(打开、关闭、最大化、最小化)时触发该事件
④FocusEvent：    焦点事件，当组件得到焦点或失去焦点时触发该事件
⑤KeyEvent：      键盘事件，当按键被按下、松开、单击时触发该事件
⑥MouseEvent     鼠标事件，当进行单击、按下、松开、移动鼠标等动作时触发该事件
⑦PaintEvent     组件绘制事件，该事件是一个特殊的数据类型，当GUI组件调用update/paint方法
                 来呈现自身时触发该事件，使劲按并非专用于事件处理模型

   2.高级事件：此类事件并不会基于某个特定动作，而是根据功能含义定义的事件
①ActionEvent：     动作时间，在按钮、菜单项被单击，在TextField中按回车键时触发
②AdjustmentEvent： 调节时间，在滑动条上移动滑块以调节数值时触发该事件
③ItemEvent：       选项事件，用户选中某项，或取某项时触发该事件
④TexEvent：        文本事件，当文本框、文本域里的文本发生改变时触发该事件

   3.事件监听器：不同的事件需要不同的事件监听器，不同的事件监听器需要实现不同的事件监听器接口
               当指定的事件发生后事件监听器就会调用所包含的事件处理器(实例方法)来处理事件

    事件类别                     描述信息                 监听器接口名
   ActionEvent                  激活组件                 ActionListener
   ItemEvent                    选择了某些项目            ItemListener
   MouseEvent                   鼠标移动                 MouseMotion Listener
   MouseEvent                   鼠标点击等               MouseListener
   KeyEvent                     键盘输入                 FocusListener
   FocusEvent                   组件收到或失去焦点         FocusListener
   AdjustmentEvent              移动滚动条等组件          AdjustmentListener
   ComponentEvent               对象移动缩放显示隐藏等     ComponentListener
   WindowEvent                  窗口收到窗口级事件(容器事件)WindowListener
   ContainerEvent               容器中增加、删除组件       ContainerListener
   TexEvent                     文本字段或文本区发生改变    TexListener